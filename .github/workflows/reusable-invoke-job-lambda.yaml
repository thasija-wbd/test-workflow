name: Invoke Job Lambda
on:
  workflow_call:
    inputs:
      file:
        required: true
        description: >
          The file that have been either newly created or updated within the context of the job-definition workflow.
        type: string
      action:
        required: true
        description: >
          The directive indicating the state of an API call, 
          specifying whether the operation pertains to creating a new entity ('CREATE') or updating an existing one ('UPDATE').
        type: string
      account-id:
        required: true
        type: string

jobs:
  transform:
    strategy:
      matrix:
        include:
          - env_short_name: dev
            aws_account_id: 076787413861
          - env_short_name: int
            aws_account_id: 076787413861
          - env_name: stg
            aws_account_id: 854525647702
          - env_name: prd
            aws_account_id: 241568064299
      fail-fast: true
    name: transform
    environment: ${{matrix.env_short_name}}
    runs-on: ubuntu-latest
    outputs:
      json_file: ${{ steps.transform-yaml-to-json.outputs.json_file }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Transform yaml file to json
        env:
          FILE: ${{ inputs.file }}
        id: transform-yaml-to-json
        run: |
          echo ${{matrix.env_short_name}}
          echo ${{matrix.aws_account_id}}
          echo arn:aws:iam::${{matrix.aws_account_id}}:role/test-iam
          json_file="${FILE%}.json"
          yq -o=json "$FILE" > "$json_file"
          echo "json_file=$json_file" >> $GITHUB_OUTPUT
      - name: Configure AWS creds
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{matrix.aws_account_id}}:role/test-iam
          role-session-name: deploysession
          aws-region: us-east-1
      - name: Call the job persister lambda function
        id: call-api
        run: |
          echo "${{steps.transform-yaml-to-json.outputs.json_file}}"
          json_payload=$(jq -c --arg action "${{ inputs.action }}" '{action: $action, payload: .}' "${{steps.transform-yaml-to-json.outputs.json_file}}")
          aws lambda invoke \
            --function-name test-function \
            --cli-binary-format raw-in-base64-out \
            --payload "${json_payload}" \
            response.json
