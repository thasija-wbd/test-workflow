name: Create job from issue

on:
  issues:
    types: [opened, edited]

permissions:
  id-token: write
  contents: write
  pull-requests: write
  issues: write

jobs:
  issue-to-pr:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.labels.*.name, 'new-job')
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Parse Issue Body
        uses: peter-murray/issue-body-parser-action@67942e1e50c46767b9302401dce7e00c4204046e # commit SHA for tag v2.0.1
        id: issue_body_parser
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          issue_id: ${{ github.event.issue.number }}
          payload_marker: job-creation-yaml
          payload: yaml

      - name: Generate UUID
        id: uuid-gen
        run: echo "::set-output name=uuid::$(uuidgen)"

      - name: Add uuid variable
        id: extract
        uses: actions/github-script@v7
        env:
          ISSUE_PAYLOAD: ${{ steps.issue_body_parser.outputs.payload }}
        with:
          script: |
            const inputs = JSON.parse(process.env.ISSUE_PAYLOAD);
            const newUuid = '${{ steps.uuid-gen.outputs.uuid }}';
            inputs.metadata.id = newUuid;
            const fs = require('fs');
            core.setOutput('metadata-name', JSON.stringify(inputs.metadata.name));
            core.setOutput('metadata-kind', JSON.stringify(inputs.metadata.kind));
            core.setOutput('metadata-version', JSON.stringify(inputs.metadata.version));
            fs.writeFileSync("output.json", JSON.stringify(inputs), "utf8");

      - name: Put the result to file and transform
        run: |
          yq output.json --output-format=yaml > job-definitions/${{ steps.extract.outputs.metadata-name }}-${{ steps.extract.outputs.metadata-version }}.yaml

      - name: Remove the temporary json file
        run: rm output.json

      - name: Commit the change
        run: |
          git config --global user.email "metering_bot@wbd.com"
          git config --global user.name "metering_bot"
          git checkout -b ${{ steps.uuid-gen.outputs.uuid }}
          git push --set-upstream origin ${{ steps.uuid-gen.outputs.uuid }}
          git add .
          git commit -m "Adding job from issue. That have this id : : ${{ steps.uuid-gen.outputs.uuid }}"
          git push

      - name: create pull request
        run: |
          pr_number="${{ github.event.issue.number }}"
          gh pr create --base main --label bot --title "config(): Add ${{ steps.extract.outputs.metadata-name }} ${{ steps.extract.outputs.metadata-kind }}" --body "Pull request Created by Github action resolve #$pr_number"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
